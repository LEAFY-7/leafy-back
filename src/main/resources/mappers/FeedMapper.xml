<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bucheon.leafy.application.mapper.FeedMapper">

    <select id="findFeedsToFollowers" resultType="FeedResponse" parameterType="java.lang.Long">
        SELECT f.feed_id, f.title, f.content, f.species, f.nickname, f.temperature,
               f.humidity, f.water_amount, f.watering_period, f.feed_type, f.created_at,
               f.modified_at, u.user_id, u.nick_name as user_nick_name, uimg.image,
               flc.like_count

        FROM feed f
        INNER JOIN (

            SELECT f.feed_id,
            ROW_NUMBER() OVER(PARTITION BY f.user_id ORDER BY f.created_at DESC) AS row_num
            FROM feed f
            WHERE f.is_delete = false
            AND f.feed_type = 'PUBLIC'
            AND
            f.user_id IN (

                SELECT f.following_user_id
                FROM user u
                JOIN follow f
                ON u.user_id = #{userId} AND u.user_id = f.follower_user_id

            )
            ORDER BY f.created_at DESC
            LIMIT 10

        )

        AS following_users_feeds
        ON following_users_feeds.feed_id = f.feed_id

        INNER JOIN user u
        ON u.user_id = f.user_id

        INNER JOIN feed_like_count flc
        ON f.feed_id = flc.feed_id

        LEFT JOIN user_image uimg
        ON u.user_id = uimg.user_id
    </select>

    <select id="findFeedsNotInFollowersFeeds" resultType="FeedResponse">
        SELECT f.feed_id, f.title, f.content, f.species, f.nickname, f.temperature,
        f.humidity, f.water_amount, f.watering_period, f.feed_type, f.created_at,
        f.modified_at, u.user_id, u.nick_name as user_nick_name, uimg.image,
        flc.like_count

        FROM feed f

        INNER JOIN feed_like_count flc
        ON f.feed_id = flc.feed_id

        INNER JOIN user u
        ON u.user_id = f.user_id

        LEFT JOIN user_image uimg
        ON u.user_id = uimg.user_id

        WHERE f.is_delete = false
        and f.feed_type = 'PUBLIC'

        <if test="feedIds.size != 0">
            AND f.feed_id NOT IN
            <foreach item="feedId" collection="feedIds" open="(" separator="," close=")">
                #{feedId}
            </foreach>
        </if>

        ORDER BY flc.like_count DESC, f.created_at DESC
        LIMIT #{size};
    </select>

    <select id="findFeedsFirst" resultType="FeedResponse" parameterType="ScrollRequest">
        select f.feed_id, f.title, f.content, f.species, f.nickname, f.temperature,
               f.humidity, f.water_amount, f.watering_period, f.feed_type, f.created_at,
               f.modified_at, u.user_id, u.nick_name as user_nick_name, uimg.image,
               flc.like_count

        from feed f

        INNER JOIN feed_like_count flc
        on f.feed_id = flc.feed_id

        INNER JOIN user u
        ON u.user_id = f.user_id

        LEFT JOIN user_image uimg
        ON u.user_id = uimg.user_id

        where f.is_delete = false
        and f.feed_type = 'PUBLIC'
        and f.feed_id &lt; #{key}

        order by flc.like_count desc, f.created_at desc
        limit #{size}
    </select>

    <select id="findFeeds" resultType="FeedResponse" parameterType="ScrollRequest">
        select f.feed_id, f.title, f.content, f.species, f.nickname, f.temperature,
               f.humidity, f.water_amount, f.watering_period, f.feed_type, f.created_at,
               f.modified_at, u.user_id, u.nick_name as user_nick_name, uimg.image,
               flc.like_count

        from feed f

        INNER JOIN feed_like_count flc
        on f.feed_id = flc.feed_id

        INNER JOIN user u
        ON u.user_id = f.user_id

        LEFT JOIN user_image uimg
        ON u.user_id = uimg.user_id

        where f.is_delete = false
        and f.feed_type = 'PUBLIC'

        order by flc.like_count desc, f.created_at desc
        limit #{size}
    </select>

    <select id="findFeedById" resultType="FeedResponse" parameterType="java.lang.Long">
        select f.feed_id, f.title, f.content, f.species, f.nickname, f.temperature,
               f.humidity, f.water_amount, f.watering_period, f.feed_type, f.created_at,
               f.modified_at, u.user_id, u.nick_name as user_nick_name, uimg.image,
               flc.like_count

        from feed f

        INNER JOIN user u
        ON u.user_id = f.user_id

        INNER JOIN feed_like_count flc
        ON f.feed_id = flc.feed_id

        LEFT JOIN user_image uimg
        ON u.user_id = uimg.user_id

        where f.feed_id = #{feedId}
        and f.is_delete = false
        and f.feed_type = 'PUBLIC'
    </select>

    <select id="findUserByFeedId" resultType="FeedAuthorResponse" parameterType="java.lang.Long">
        select f.feed_id, f.title, f.content, f.species, f.nickname, f.temperature,
               f.humidity, f.water_amount, f.watering_period, f.feed_type, f.created_at,
               f.modified_at, u.user_id, u.nick_name as user_nick_name, uimg.image,
               flc.like_count
        from feed f

        INNER JOIN user u
        ON u.user_id = f.user_id

        INNER JOIN feed_like_count flc
        ON f.feed_id = flc.feed_id

        LEFT JOIN user_image uimg
        ON u.user_id = uimg.user_id

        where f.feed_id = #{feedId}
        and f.is_delete = false
        and f.feed_type = 'PUBLIC'
    </select>

    <insert id="saveFeed" parameterType="FeedRequest" useGeneratedKeys="true" keyColumn="feed_id" keyProperty="request.feedId">
        insert into feed (user_id,title,species,nickname,temperature,
                          humidity,water_amount,watering_period,
                          content,is_delete,feed_type,created_at,modified_at) values
                          (#{userId}, #{request.title}, #{request.species}, #{request.nickname}, #{request.temperature},
                           #{request.humidity}, #{request.waterAmount}, #{request.wateringPeriod},
                           #{request.content}, false, #{request.feedType}, now(), now())
    </insert>

    <update id="editFeed" parameterType="FeedRequest">
        update feed set title = #{request.title}, species = #{request.species}, nickname = #{request.nickname}, temperature = #{request.temperature},
                        humidity = #{request.humidity}, water_amount = #{request.waterAmount}, watering_period = #{request.wateringPeriod},
                        content = #{request.content}, feed_type = #{request.feedType}, modified_at = now() where feed_id = #{feedId} and user_id = #{userId}
    </update>

    <delete id="deleteAllFeeds">
        delete from feed
    </delete>

    <update id="deleteFeed" parameterType="java.lang.Long">
        update feed set is_delete = true where feed_id = #{feedId} and user_id = #{userId}
    </update>
</mapper>