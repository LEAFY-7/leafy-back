<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bucheon.leafy.application.mapper.QnaMapper">

    <select id="count" parameterType="Long" resultType="int">
        SELECT count(*)
          FROM qna
         WHERE is_delete = false
           AND user_id =#{userId}
    </select>

    <select id="adminCount" parameterType="int" resultType="int">
        SELECT count(*)
        FROM qna
        WHERE is_delete = false
    </select>


    <update id="deleteById" parameterType="long" >
        UPDATE qna
        SET is_delete = true
        WHERE qna_id = #{qnaId}
    </update>

    <insert id="save" parameterType="QnaSaveRequest" useGeneratedKeys="true" keyColumn="qna_id" keyProperty="qnaSaveRequest.qnaId">
        INSERT INTO qna (create_at ,modified_at,is_delete , contents, qna_status, title, view_count, user_id)
        VALUES (now(), now(), 0, #{qnaSaveRequest.contents}, 0, #{qnaSaveRequest.title}, 0, #{userId})
    </insert>

    <select id="savefind" resultType="QnaSaveResponse">
        SELECT qna_id, create_at
        FROM qna
        WHERE user_id = #{userId}
        ORDER BY create_at DESC
        LIMIT  1;
    </select>

    <select id="findById" parameterType="long" resultType="QnaResponse">
        SELECT
            q.*,
            qc.*,
            (
                SELECT COUNT(qr.qna_comment_id)
                FROM qna_reply qr
                WHERE qr.qna_comment_id = qc.qna_comment_id
                  AND qr.is_delete = false
            ) AS qnaReplyCount
        FROM qna q
                 LEFT JOIN qna_comment qc ON q.qna_id = qc.qna_id
        WHERE q.qna_id = #{qnaId}
          AND q.is_delete = false;

    </select>

    <select id="findQnaById" parameterType="Long" resultType="QnaResponse" >
        select user_id
          from qna
         where qna_id = #{qndId}
           and is_delete = false
    </select>

    <update id="viewCnt" parameterType="long">
        UPDATE qna
        SET   view_count = view_count + 1
        WHERE qna_id = #{qnaId}
    </update>

    <update id="editById">
        UPDATE qna
        SET contents = #{qnaEditRequest.contents}
          , title = #{qnaEditRequest.title}
          , modified_at = now()
        WHERE qna_id = #{qnaId}
          AND user_id = #{userId}
    </update>

    <select id="eidtfind" resultType="QnaEditResponse">
        SELECT  modified_at
        FROM qna
        WHERE user_id = #{userId}
        ORDER BY modified_at DESC
        LIMIT 1;
    </select>

    <select id="pageFindById" resultType="QnaListResponse">
        SELECT *
        FROM qna
        WHERE user_id = #{userId}
        AND is_delete = false
        <if test="pageRequest.sortColumn != null" >
            ORDER BY #{pageRequest.sortColumn} #{pageRequest.sortStatus}
        </if>
        <if test="pageRequest.sortColumn == null">
            ORDER BY modified_at desc, create_at desc
        </if>
        LIMIT #{pageRequest.limit}
        OFFSET #{pageRequest.offset}
    </select>

    <select id="adminSelectAll"  resultType="QnaListResponse">
        SELECT *
        FROM qna
        WHERE is_delete = false
        <if test="pageRequest.sortColumn != null ">
            ORDER BY #{pageRequest.sortColumn} #{pageRequest.sortStatus}
        </if>
        <if test="pageRequst.sortColumn == null">
            ORDER BY moidied_at desc, create_at desc
        </if>
        LIMIT #{pageRequest.limit}
        OFFSET #{pageRequest.offset}
    </select>

</mapper>
