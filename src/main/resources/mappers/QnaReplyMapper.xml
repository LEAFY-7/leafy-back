<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bucheon.leafy.application.mapper.QnaReplyMapper">

    <update id="deleteByQnaReplyId" parameterType="Long">
        UPDATE qna_reply
        SET is_delete = true
        WHERE qna_reply_id = #{qnaReplyId}
          AND user_id = #{userId}
          AND qna_comment_id =${qnaCommentId}
    </update>

    <insert id="saveQnaReply" parameterType="QnaReplySaveRequest" useGeneratedKeys="true" keyColumn="qna_reply_id" keyProperty="qnaReplySaveRequest.qnaReplyId">
        INSERT INTO qna_reply
            ( created_at, modified_at, is_delete, comment, user_id, qna_comment_id)
        VALUES
            (now(), now(),  0, #{qnaReplySaveRequest.comment}, #{userId}, #{qnaCommentId})
    </insert>

    <select id="selectAfterQnaReplySave" parameterType="Long" resultType="QnaReplySaveResponse">
        SELECT qna_reply_id, created_at
        FROM qna_reply
        WHERE qna_reply_id = #{qnaReplyId}
    </select>

    <update id="editQnaReply" >
        UPDATE qna_reply
        SET  modified_at = now()
          ,comment = #{qnaReplyEditRequest.comment}
        WHERE qna_reply_id = #{qnaReplyId}
          AND user_id = #{userId}
          AND qna_comment_id =#{qnaCommentId}
    </update>

    <select id="selectUserIdByQnaCommentId" parameterType="Long" resultType="Long">
        SELECT user_id
        FROM qna_comment
        WHERE qna_comment_id = #{qnaCommentId}
    </select>

    <select id="selectAfterQnaReplyEdit" resultType="QnaReplyEditResponse">
        SELECT  modified_at
        FROM qna_reply
        WHERE qna_reply_id = #{qnaReplyId}

    </select>

    <select id="findUserIdByQnaCommentId" parameterType="Long" resultType="Long">
        SELECT user_id
        FROM qna_comment
        WHERE qna_comment_id = #{qnaCommentId}
    </select>

    <select id="selectByQnaId" parameterType="Long" resultType="QnaReplyResponse">
        SELECT qr.*
        FROM qna_reply qr
        WHERE qr.qna_comment_id IN (
            SELECT qc.qna_comment_id
            FROM qna_comment qc
            WHERE qc.qna_id = #{qnaId}
        ) AND qr.is_delete = false;
    </select>

    <select id="selectIsDeleteTrueAndFalseById" parameterType="Long" resultType="QnaReplyResponse" >
        SELECT *
        FROM qna_reply
        WHERE qna_reply_id = #{qnaReplyId}
          AND is_delete = false
    </select>

    <select id="findUserId" resultType="long">
        SELECT *
        FROM user
        WHERE is_delete = false
          AND is_comment_notifications = true
          AND user_id = #{userId}
    </select>

</mapper>
